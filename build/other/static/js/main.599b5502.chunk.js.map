{"version":3,"sources":["html.js","function-chat-message.js","machines-message.js","worker-server.js","function-write-message.js","function-chat-interface.js","App.js","index.js"],"names":["html","htm","bind","React","createElement","TextMessage","props","_templateObject","message","user","ImageMessage","_templateObject2","imageBase64","ChatMessage","_templateObject3","type","_templateObject4","_templateObject5","messageEvents","dbMessages","subscriptions","workerEvents","MESSAGE","TYPE","WAIT","IMAGE","announcements","announce","data","filter","subscription","forEach","target","messageActions","_messageActions","Object","defineProperty","event","messages","concat","push","reduce","acc","ts","Date","now","objectSpread","worker","postMessage","cmd","subscribe","length","unsubscribe","splice","WriteMessage","_useState","useState","_useState2","slicedToArray","interfaceState","interfaceSend","_useState3","_useState4","typingTimer","setTypingTimer","fileEl","useRef","inputEl","useEffect","function_write_message_templateObject","e","_ref2","preventDefault","checkValidity","Array","from","FormData","current","value","submit","_ref","setMessageText","clearTimeout","setTimeout","typing","_ref3","fileReader","FileReader","onloadend","result","readAsDataURL","files","imageStuff","click","chatMessage","i","function_chat_interface_templateObject","ChatInterface","setMessages","console","log","function_chat_interface_templateObject2","map","App","App_templateObject","Component","ReactDOM","render","react_default","a","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.599b5502.chunk.js","sourcesContent":["import React from 'react';\nimport htm from 'htm';\n\nexport const html = htm.bind(React.createElement);\n","import { html } from './html.js';\n\nconst TextMessage = (props) => {\n  return html`\n    <div className=\"message\">\n      <em>${props.message.user}:</em>\n      <p>${props.message.message}</p>\n    </div>\n  `;\n}\n\nconst ImageMessage = (props) => {\n  return html`\n    <div className=\"message\">\n      <em>${props.message.user}:</em>\n      <img src=\"${props.message.imageBase64}\" />\n    </div>\n  `;\n}\n\nexport const ChatMessage = (props) => {\n  return html`\n    ${props.message.type === 'image'\n      ? html`<${ImageMessage} ...${props} key=\"2\" />`\n      : html`<${TextMessage} ...${props} key=\"1\" />`\n    }\n  `;\n}\n","export const messageEvents = {\n  WAIT: 'WAIT',\n  TYPE: 'TYPE',\n  SEND: 'SEND',\n  FAIL: 'FAIL',\n  RETRY: 'RETRY',\n  CANCEL: 'CANCEL',\n  SUCCESS: 'SUCCESS',\n}\n\nexport const messageMachine = {\n  initial: 'waiting',\n  states: {\n    waiting: {\n      on: {\n        TYPE: 'typing',\n      },\n    },\n    typing: {\n      on: {\n        WAIT: 'waiting',\n        SEND: 'sending',\n      },\n    },\n    sending: {\n      on: {\n        FAIL: 'failed',\n        SUCCESS: 'sent',\n      },\n    },\n    failed: {\n      on: {\n        RETRY: 'sending',\n        CANCEL: 'deleted'\n      }\n    },\n    deleted: {},\n    sent: {}\n  }\n};\n\nexport const messageTransition = (state, event) => {\n  return messageMachine.states[state].on[event] || state;\n}\n","let dbMessages = [];\nlet subscriptions = [];\n\nexport const workerEvents = {\n  MESSAGE: 'message',\n  TYPE: 'typing',\n  WAIT: 'wait',\n  IMAGE: 'image'\n}\n\nexport const announcements = {\n  MESSAGES: 'messages'\n}\n\nfunction announce(type, data) {\n  let targets = subscriptions.filter(subscription => subscription.type === type);\n  targets.forEach(target => target.announce(data));\n}\n\nconst processMessageData = message => {\n  return message.reduce((acc, data) => {\n    if (data[0] === 'imageBase64') return acc;\n    acc[data[0]] = data[1];\n    return acc;\n  }, {\n    ts: Date.now(),\n    type: 'message'\n  });\n}\n\nconst messageActions = {\n  [workerEvents.WAIT]: event => {\n    announce(announcements.MESSAGES, dbMessages);\n  },\n  [workerEvents.TYPE]: event => {\n    let messages = [...dbMessages, {user: event.data.user, message: '...is typing.', type: 'announcement'}]\n    announce(announcements.MESSAGES, messages);\n  },\n  [workerEvents.MESSAGE]: event => {\n    dbMessages.push(processMessageData(event.data.message));\n    announce(announcements.MESSAGES, dbMessages);\n  },\n  [workerEvents.IMAGE]: event => {\n    let message = {\n      ...event.data.message,\n      ts: Date.now(),\n      type: 'image'\n    }\n    dbMessages.push(message);\n    announce(announcements.MESSAGES, dbMessages);\n  }\n}\n\nexport const worker = {\n  postMessage: function(event) {\n    messageActions[event.data.cmd](event);\n  },\n  subscribe: function(type, announce, user) {\n    const target = subscriptions.length;\n    subscriptions.push({type, announce, user});\n    return {\n      unsubscribe: () => {\n        subscriptions.splice(target, 1, {type: 'unsubscribed'});\n      }\n    }\n  }\n}\n","import { useState, useRef, useEffect } from 'react';\nimport { html } from './html.js';\nimport {\n  messageEvents,\n} from './machines-message.js';\nimport { worker, workerEvents } from './worker-server.js';\n\nconst typingTimeout = 2000;\n\nconst typing = (e, {typingTimer, setTypingTimer, interfaceSend, setMessageText, user}) => {\n  clearTimeout(typingTimer);\n  interfaceSend(messageEvents.TYPE);\n  setTypingTimer(setTimeout(interfaceSend, typingTimeout, messageEvents.WAIT));\n}\n\nconst submit = (e, {worker, inputEl, interfaceSend}) => {\n  e.preventDefault();\n  if (e.target.checkValidity()) {\n    interfaceSend(messageEvents.WAIT);\n    worker.postMessage({\n      data: {\n        cmd: workerEvents.MESSAGE,\n        message: Array.from(new FormData(e.target))\n      }\n    });\n    inputEl.current.value = '';\n  }\n}\n\nconst imageStuff = (e, {worker, fileEl, interfaceSend, user}) => {\n  if (e.target.value === '') return;\n\n  let fileReader = new FileReader();\n  const handleFileRead = (e) => {\n    let imageBase64 = fileReader.result;\n    interfaceSend(messageEvents.WAIT);\n    worker.postMessage({\n      data: {\n        cmd: workerEvents.IMAGE,\n        message: {\n          imageBase64,\n          user\n        }\n      }\n    });\n    fileEl.current.value = '';\n  }\n  fileReader.onloadend = handleFileRead;\n  fileReader.readAsDataURL(e.target.files[0]);\n}\n\nexport const WriteMessage = (props) => {\n  const [interfaceState, interfaceSend] = useState(messageEvents.WAIT);\n  const [typingTimer, setTypingTimer] = useState();\n  const fileEl = useRef(null);\n  const inputEl = useRef(null);\n  useEffect(\n    () => {\n      worker.postMessage({\n        data: {\n          cmd: workerEvents[interfaceState],\n          user: props.user\n        }\n      });\n    },\n    [interfaceState],\n  );\n  return html`\n    <form onSubmit=\"${e => submit(e, {worker, inputEl, interfaceSend})}\">\n      <input type=\"hidden\" name=\"user\" value=\"${props.user}\" />\n      <input\n        required\n        name=\"message\"\n        ref=\"${inputEl}\"\n        onKeyDown=\"${e => typing(e, {typingTimer, setTypingTimer, interfaceSend, inputEl, user: props.user})}\"\n        onBlur=\"${e => {clearTimeout(typingTimer); interfaceSend(messageEvents.WAIT);}}\"\n      />\n      <input\n        className=\"input__file\"\n        type=\"file\"\n        accept=\"image/png\"\n        ref=\"${fileEl}\"\n        onChange=\"${e => imageStuff(e, {worker, fileEl, interfaceSend, user: props.user})}\"\n      />\n      <button\n        type=\"button\"\n        onClick=\"${e => fileEl.current.click()}\"\n      >File</button>\n      <button\n        type=\"submit\"\n      >Send</button>\n    </form>\n  `;\n}\n","import { useState, useEffect }  from 'react';\nimport { html } from './html.js';\nimport { ChatMessage } from './function-chat-message.js';\nimport { WriteMessage } from './function-write-message.js';\nimport { worker, announcements } from './worker-server.js';\n\nconst chatMessage = (message, i) => html`\n  <${ChatMessage} message=\"${message}\" key=\"${i}\" />\n`;\n\nexport const ChatInterface = (props) => {\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const subscription = worker.subscribe(announcements.MESSAGES, setMessages, props.user);\n    return () => {\n      subscription.unsubscribe();\n    }\n  });\n  console.log(messages);\n  return html`\n    <section>\n      <h1>Hi, ${props.user}!</h1>\n      <div className=\"messages\">\n        ${messages\n          .filter(message => message.type !== 'announcement' || message.user !== props.user)\n          .map(chatMessage)\n        }\n      </div>\n      <${WriteMessage} user=\"${props.user}\" />\n    </section>\n  `;\n}\n","import { Component } from 'react';\nimport './App.css';\nimport { html } from './html.js';\nimport { ChatInterface } from './function-chat-interface.js';\n\nclass App extends Component {\n  render() {\n    return html`\n      <div className=\"app\">\n        <${ChatInterface} user=\"Laura\" messages=\"${[{},{}]}\" />\n        <${ChatInterface} user=\"Rob\" messages=\"${[{},{event: 'TYPE'}]}\" />\n      </div>\n    `;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}